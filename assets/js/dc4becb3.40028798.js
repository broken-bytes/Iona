"use strict";(self.webpackChunkIona_lang=self.webpackChunkIona_lang||[]).push([[939],{9325:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var r=t(4848),s=t(8453);const a={sidebar_position:9,description:"Contracts in Iona"},o="Contracts",c={id:"guide/contracts",title:"Contracts",description:"Contracts in Iona",source:"@site/docs/guide/contracts.md",sourceDirName:"guide",slug:"/guide/contracts",permalink:"/docs/guide/contracts",draft:!1,unlisted:!1,editUrl:"https://github.com/broken-bytes/iona-lang/docs/guide/contracts.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,description:"Contracts in Iona"},sidebar:"tutorialSidebar",previous:{title:"Classes",permalink:"/docs/guide/classes"},next:{title:"Standard Library",permalink:"/docs/category/standard-library"}},i={},d=[];function l(n){const e={admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"contracts",children:"Contracts"}),"\n",(0,r.jsx)(e.p,{children:"Contracts are something that a struct or class must adhere to. They are like like contracts in the real world. One party defines the contract and the other one agrees on the terms."}),"\n",(0,r.jsx)(e.p,{children:"This is exactly how contracts work in Iona. A type has to fulfill a contract if it wants to use it."}),"\n",(0,r.jsx)(e.p,{children:"This is how a contract is defined:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-Iona",children:"contract Buyable {\n    mut fn buy()\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:'The code can be read as "define a contract that ensures all signing parties need to implement a mutating buy function".'}),"\n",(0,r.jsx)(e.p,{children:"Accordingly, a type may use a contract like this:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-Iona",children:"struct Ticket: Buyable {\n    var isSold = false\n\n    mut fn buy() {\n        isSold = true\n    }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"Contracts may also require the type to implement some properties:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-Iona",children:"contract Countable {\n    var count: Int { get; set; }\n}\n\nstruct Counter: Countable {\n    var count: Int = 0\n}\n"})}),"\n",(0,r.jsxs)(e.admonition,{type:"tip",children:[(0,r.jsxs)(e.p,{children:["When properties in a contract only require a ",(0,r.jsx)(e.code,{children:"get"})," block, the conforming type can use ",(0,r.jsx)(e.code,{children:"let"})," instead of ",(0,r.jsx)(e.code,{children:"var"}),":"]}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-Iona",children:"contract Countable {\n    var count: Int { get }\n}\n\nstruct Counter: Countable {\n    let count: Int = 0\n}\n"})})]}),"\n",(0,r.jsx)(e.p,{children:"Additionally, contracts can force to specifiy a generic:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-Iona",children:"contract Container<T> {\n    var items: [T]\n\n    mut fn append(item: T) {\n        // Add to the items\n    }\n}\n\nstruct List: Container<Int> {\n    var items: [Int]\n\n    mut fn append(item: Int) {\n        ...\n    }\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"Generics can also have constraints:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-Iona",children:"contract Container<T: where T is Numeric> {\n    var items: [T]\n\n    mut fn append(item: T) {\n        // Add to the items\n    }\n}\n\n// Error: User is not a numeric type\nstruct List: Container<User> {\n    var items: [User]\n\n    mut fn append(item: User) {\n        ...\n    }\n}\n"})}),"\n",(0,r.jsxs)(e.admonition,{type:"tip",children:[(0,r.jsx)(e.p,{children:"Note how structs are used throughout most examples."}),(0,r.jsx)(e.p,{children:"In fact, Iona favours immutable data structures and therefore structs are in most cases the proposed way."})]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>c});var r=t(6540);const s={},a=r.createContext(s);function o(n){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),r.createElement(a.Provider,{value:e},n.children)}}}]);